else
{
	for (int diag = -1; diag <= 1; diag++)
	{
		if (diag != 0)
		{
			int diagX = x + diag;

			if (inverse)
			{
				diagX = x - diag;
			}

			if (diagX >= 0 && diagX < xDim)
			{
				GamePiece diagonalPiece = pieces [diagX, y + 1];

				if (diagonalPiece.Type == PieceType.EMPTY)
				{
					bool hasPieceAbove = true;

					for (int aboveY = y; aboveY >= 0; aboveY--)
					{
						GamePiece pieceAbove = pieces [diagX, aboveY];

						if (pieceAbove.IsMovable ())
						{
							break;
						}
						else if(!pieceAbove.IsMovable() && pieceAbove.Type != PieceType.EMPTY)
						{
							hasPieceAbove = false;
							break;
						}
					}

					if (!hasPieceAbove)
					{
						Destroy (diagonalPiece.gameObject);
						piece.MovableComponent.Move (diagX, y + 1, fillTime);
						pieces [diagX, y + 1] = piece;
						SpawnNewPiece (x, y, PieceType.EMPTY);
						movedPiece = true;
						break;
					}
				} 
			}
		}
	}
}

--------------------------------------------------------------------------------

Destroy (pieces [1, 4].gameObject);
SpawnNewPiece (1, 4, PieceType.BUBBLE);

Destroy (pieces [2, 4].gameObject);
SpawnNewPiece (2, 4, PieceType.BUBBLE);

Destroy (pieces [3, 4].gameObject);
SpawnNewPiece (3, 4, PieceType.BUBBLE);

Destroy (pieces [5, 4].gameObject);
SpawnNewPiece (5, 4, PieceType.BUBBLE);

Destroy (pieces [6, 4].gameObject);
SpawnNewPiece (6, 4, PieceType.BUBBLE);

Destroy (pieces [7, 4].gameObject);
SpawnNewPiece (7, 4, PieceType.BUBBLE);

Destroy (pieces [4, 0].gameObject);
SpawnNewPiece (4, 0, PieceType.BUBBLE);
